- url = @user.new_record? ? admin_users_path : admin_user_path(@user)

.row
  .col-md-8.col-md-offset-2
    .panel.panel-default
      .panel-heading
        %h3.panel-title
          = "#{@user.new_record? ? 'Add' : 'Manage'} User"

          - if ! @user.new_record?
            - if admin? || superuser?
              = link_to nil, href: admin_user_sessions_path(@user), data: {method: :post}, class: "panel-heading-link pull-right" do
                = icon('user')
                Ghost Login

      .panel-body
        = simple_form_for @user, url: url do |f|
          = f.input :username
          .row
            .col-md-6
              = f.input :first_name
            .col-md-6
              = f.input :last_name
          = f.input :byline
          = f.input :role, as: :select, collection: Virgo::User.role_names(superuser: @user.superuser?), include_blank: false
          = f.input :email
          = f.input :about, label: 'Biographical info'
          = f.input :password
          = f.input :password_confirmation, as: :password
          = f.input :show_on_authors_page, label: "Show this user on the \"authors\" page?"

          .row
            .col-md-3
              = f.input :author_page_weight, label: "Weight on authors page", as: :select, collection: (-20..20)

          .form-group.image.optional.user_avatar
            %label.control-label Avatar
            - if @user.avatar.present?
              .avatar-preview
                = image_tag @user.avatar.url(:thumb)

            = f.input :avatar, as: :file, label: false

            .well.social-well
              %h3.well-title Social Media Accounts (optional)
              .row
                .col-md-6
                  = f.input :twitter_id, label: "Twitter Username"
                  = f.input :facebook_id, label: "Facebook Username"
                  = f.input :instagram_id, label: "Instagram Username"
                .col-md-6
                  = f.input :snapchat_id, label: "Snapchat Username"
                  = f.input :linkedin_id, label: "Linkedin ID"
                  = f.input :public_email, label: "Public Email"


          - if @user.persisted? && can?(:destroy, @user)
            = link_to admin_user_path(@user), class: 'delete-link pull-left', data: {method: :delete, confirm: "Are you sure you want to permanently delete this user?"} do
              %i.fa.fa-trash-o
              Delete User

          = f.button :submit, "Save Profile", class: 'btn btn-info pull-right', data: {disable_with: "Saving"}, id: "save-user"
